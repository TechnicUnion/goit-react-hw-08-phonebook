{"version":3,"file":"static/js/713.c6fd27be.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Input } from 'styles';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 10px;\n  margin-bottom: 20px;\n  border: 1px solid black;\n  border-radius: 4px;\n`;\n\nexport const ContactInput = styled(Input)`\n  width: 100%;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contactsOperations';\nimport { Form, ContactInput } from './ContactForm.styled';\nimport { Label, Button } from 'styles';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (items.length > 0 && items.find(item => item.name === name)) {\n      alert('The contact is already in your phonebook.');\n      setName('');\n      setNumber('');\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>Name</Label>\n      <ContactInput\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={e => setName(e.target.value)}\n      />\n      <Label>Phone</Label>\n      <ContactInput\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={e => setNumber(e.target.value)}\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\nimport { Button } from 'styles';\n\nexport const List = styled.ul`\n  padding: 0;\n  width: 400px;\n  list-style: none;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: ${props => props.theme.color.mainColor};\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const ContactItemWrapper = styled.div`\n  display: flex;\n  max-width: 350px;\n  justify-content: space-between;\n`;\n\nexport const DeleteBtn = styled(Button)`\n  font-size: 12px;\n  background-color: rgb(61, 203, 231);\n`;\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"50\"\n      width=\"50\"\n      radius=\"7\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/contactsOperations';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/selectors';\nimport {\n  ContactItem,\n  ContactItemWrapper,\n  DeleteBtn,\n  List,\n} from './ContactList.styled';\nimport Loader from 'components/Loader/Loader';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {error && <p>{error}</p>}\n      <List>\n        {items.length > 0\n          ? items.map(item => {\n              const { id, name, number } = item;\n              return (\n                <ContactItem key={id}>\n                  <ContactItemWrapper>\n                    {name}: {number}\n                  </ContactItemWrapper>\n                  <DeleteBtn\n                    type=\"button\"\n                    onClick={() => dispatch(deleteContact(id))}\n                  >\n                    Delete\n                  </DeleteBtn>\n                </ContactItem>\n              );\n            })\n          : null}\n      </List>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin-bottom: 20px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { Wrapper } from './Filter.styled';\nimport { Input, Label, Title } from 'styles';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <Title>Filter</Title>\n      <Label>Find contats by name</Label>\n      <Input\n        name=\"filter\"\n        onChange={e => dispatch(filterContacts(e.target.value.toLowerCase()))}\n      />\n    </Wrapper>\n  );\n}\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Section, Title } from 'styles';\n\nexport function Contacts() {\n  return (\n    <Section>\n      <Title>Add new contact</Title>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Section>\n  );\n}\n"],"names":["Form","styled","ContactInput","Input","ContactForm","useState","name","setName","number","setNumber","items","useSelector","selectContacts","dispatch","useDispatch","onSubmit","e","preventDefault","length","find","item","alert","addContact","type","pattern","title","required","value","onChange","target","List","ContactItem","props","theme","color","mainColor","ContactItemWrapper","DeleteBtn","Button","height","width","radius","ariaLabel","wrapperClassName","visible","ContactList","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","map","id","onClick","deleteContact","Wrapper","Filter","filterContacts","toLowerCase","Contacts"],"sourceRoot":""}